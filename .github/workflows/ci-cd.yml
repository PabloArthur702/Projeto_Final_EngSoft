name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests and Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Linter (Flake8)
      run: |
        pip install flake8
        flake8 .

    - name: Run Tests
      run: |
        pip install pytest
        pytest

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.8.1
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy Application
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
        docker pull ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
        docker stop flask-app || true
        docker rm flask-app || true
        docker run -d --name flask-app -p 80:5000 ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
        EOF
